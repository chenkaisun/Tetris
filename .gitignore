# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/



# Experimental Folder
experimental/*
.idea/


# macOS dir files
.DS_Store


# Checkpoints
checkpoints


# Generated files
/fairseq/temporal_convolution_tbc
/fairseq/modules/*_layer/*_forward.cu
/fairseq/modules/*_layer/*_backward.cu
/fairseq/version.py

# data
data-bin/

# reranking
/examples/reranking/rerank_data

# Cython-generated C++ source files
/fairseq/data/data_utils_fast.cpp
/fairseq/data/token_block_utils_fast.cpp

# VSCODE
.vscode/ftp-sync.json
.vscode/settings.json


# Weights and Biases logs
wandb/

examples/

train.json
*-*Copy*.json
*.pkl
.vector_cache/
out/
final/
missMDA/
*.csv
*.tsv
*.zip
*.p
*.pt
*.npz
*.xlsx
#upload.sh
latex*.txt
note*.txt
experiment*/
#data/WikiHow/tmp/cur_status*.json
#data/WikiHow/tmp/excluded_pages*.json
#data/WikiHow/tmp/*data*.json
#data/WikiHow/tmp/*visited_titles*.json
#data/WikiHow/tmp/visited_titles.json
#data/WikiHow/tmp/a*.json
#data/WikiHow/tmp/*data*.json
#data/WikiHow/tmp/*data*
#data/WikiHow/*data*.json
code/model/states/
other_repo*/
#*transformers/
hello/
analyze/
tmp*.txt
nohup*.out
code/test_*.py
#wikipedia_html_for_pubchem_compounds/
_gitignore.txt
nohup.out
code/runs/
fsq/
fairseq/
StanfordParser-*/
code/roberta-large/
concept_link/
*.ppt
*.pptx
data/WikiHow/*
code/data/
iclr2022/
code/metrics/
plan.jpg
code/pycocoevalcap/*/data
code/tokenizer/
*.pdf
*.png
*.docx
pycocoevalcap/spice/cache/
_pycocoevalcap/
*.gv
stanford-corenlp-3.6.0-models.jar
stanford-corenlp-3.6.0.jar
/code/amrlib/
/code/amrlib/*
/code/output/*
/code/analysis*/
*.drawio
bart.pth
# /code/BARTScore/*

*.filepart
*.npy
*.tgn
/code/conceptnet_db/